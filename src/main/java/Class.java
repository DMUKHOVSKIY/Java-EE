public class Class {
    //Тема - AOP (аспектно ориентированное программирование) - парадигма, которая дополняет такую же парадигму как ООП
    //В реальности AOP - вредит. AOP завязан на сквозной функциональности и она удобна тем, что мы можем вносить некий
    //код в отдельное местно и не хламить наш конкретный код. Но для его работы надо много ресурсов, а это замедляет
    //программу и некоторые вещи становятся неудобными, ещё становится сложнее дебажить код
    //(мы сразу не видим что в какой последовательности выполняется)
    //Сквозная функциональность - рассчитана на то, чтобы удобно добавить какой-то кусок кода к уже существующему куску кода
    //В аспектном программировании есть принципы. Один из них это Аспект.
    //Аспект - класс, который внутри себя содержит дополнительный код, который мы хотим куда-то прикрепить
    //Когда мы написали аспект и присоединили какую-то сквозную функциональность уже к какому-то классу, то уже человек,
    //который будет брать метод класса, будет брать не его оригинальным, а будет брать proxy с дополнительной логикой.
    //Получается в метод будет уже вплетена сквозная функциональность.

}
