public class Class {
    //Spring Security  -  огромный модуль и он помогает нам подключить к нашему проекту на Spring  защиту. Защиту от
    // определённого количества атак. Настройка Spring Security зависит от того, какое у нас приложение
    // (Web, REST, Cloud). Если проект работает уже давно, то этот модуль уже давно настроен и туда не будут пускать джунов.
    //Сегодня смотрим:
    //базовую аунтификацию в Spring приложении, принципы защиты Web приложений, когнфигурацию
    //Spring Security(фреймворк) - это модуль, который мы подключаем к своему приложению на спринг и он помогает нам
    // настроить/обеспечить аунтефикацию и авторизацию наших спринг приложений. Этот модуль предполагает только
    // подключение и настройку. Так как там и так много чего написано за нас
    //По факту защита с фильтрами делает практически то же самое, что делает Spring Security. Только Spring Security
    // делает это намного лучше и правильнее + защита от определенных видов атак
    //
    //Идентификация — это заявление о том, кем вы являетесь.
    //В зависимости от ситуации это может быть имя, емейл, номер телефона (1 этап)
    //Аутентификация — это процедура проверки подлинности, например
    //проверка подлинности пользователя путем сравнения введённого им пароля с паролем, сохраненным в базе данных.
    // (проверка данных, введенных пользователем с данными в БД)
    //Авторизация — это процедура проверки, что вам разрешен доступ к
    //запрашиваемому ресурсу.
    //
    //Авторизация в зависимости от реализации может происходить как сразу (выделяем группу доступных ресурсов после аунтрефикации),
    //либо проверяем каждый раз, когда пользователь ходит по сайту
    //
    //Основные возможности Spring Security:
    //1)Шифрование паролей
    //Возможность хранить пароль в БД в виде какого-то хеша. Шифрование происходит по умолчанию с BCrypt
    //2)Аунтификация In-Memory
    //Очень удобно для временного хранения данных для входа пользователя (БД в оперативной памяти). Это для разработки
    //3)LDAP-аунтификация
    //LDAP-протокол аунтификации учетных записей пользователей в организациях. Это отдельный сервер с паролями в
    // больших компаниях. Самый защищенный вариант
    //4)Управление сессией
    //В принципе такое же управление сессией, как и в сервлетах. Но удобнее
    //5)Remember Me Authentication
    //Встроенный механизм распознавания. Пользователям не нужно вводить учетные данные при каждом посещении сайта
    //6)OAuth 2.0 (Open Authorization 2.0)
    //Это открытый стандарт проверки прав пользователя с помощью сервиса авторизации. Это как вход с помощью учетных
    // записях Facebook, Google и др.
    //
    //Компоненты Spring Security: (фотка)
    //Authentication (credentials) - данные под которыми входит пользователь (пароль и логин)
    //Authentication (principal) - тот пользователь, который вошел в систему
    //Authentication Manager - основной компонетн, который управляет всей аунтефикации в Spring Security. Мы его и настраиваем
    //Базовые советы по защите веб-приложений:
    //● Используйте инструменты для анализа защищенности
    //● Защитите пользовательские данные с помощью HTTPS
    //● Обновляйте программное обеспечение
    //● Предотвратите SQL-инъекции
    //● Предотвратите межсайтовый скриптинг
    //● Проверяйте и шифруйте пароли
    //● Контролируйте процесс загрузки файлов
    //
    //Роли - это внутренний механизм Spring Security для разграничения и настройки доступов к ресурсам в приложении.
}
